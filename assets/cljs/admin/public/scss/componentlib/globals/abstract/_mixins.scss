@use "sass:list";
@use "globals/abstract/constants";

@mixin hover {
    &:not([disabled]):hover {
        @content;
    }
}

@mixin highlight($color, $trim: 0px) {
    @include hover {
        background-color: $color;

        & {
            position: relative;
            background-color: transparent;
            z-index: 0;
        }
        
        &::after {
            content: "";
            height: 100%;
            background-color: $color;
            position: absolute;
            left: 0 - $trim;
            bottom: 0;
            width: calc(100% + #{$trim}*2);
            z-index: -1;
        }
    }
}

@mixin first-vertical {
    margin-top: 0;
}

@mixin namespace($parent-selector) {

}

@mixin active {
    &:not([disabled]):active {
        @content;
    }
}

@mixin clickable {
    &:not([disabled]):hover {
        cursor: pointer;
    }
}

@mixin disabled {
    &:disabled {
        @content;
    }
}

@mixin absolute-centered {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin elevation($height) {
    box-shadow: (1px*$height) (1px*$height) (3px*$height) 0.5px darkgray;
}

@mixin no-border {
    border-width: 0;
}

@mixin hide-icon-text {
    .Button span.Text {
        display: none;
    }
    .Button .Separator {
        display: none;
    }
}

@mixin no-margin-headers {
    @include apply-headers(">") {
        margin-top: 0;
        margin-bottom: 0;
    }
}

@mixin apply($operator, $selectors) {
    $li: [];
    @for $i from 1 through list.length($selectors) {
        $li: list.append($li, "& #{unquote($operator)} #{unquote(list.nth($selectors, $i))},", $separator: space)
    }

    $li: list.join($li, [], $bracketed: false);

    #{$li} {
        @content;
    }
}

@mixin apply-headers($operator) {
    @include apply($operator, "h1" "h2" "h3" "h4" "h5" "h6"
         ".Header1" ".Header2" ".Header3"
         ".Header4" ".Header5" ".Header6"
                 ) {
        @content;
    }
}

@mixin style-headers {
    @include apply-headers(">") {
        @content;
    }
}

@mixin style-headers-2 {
     h1, h2, h3, h4, h5, h6, 
    .Header1, .Header2, .Header3,
    .Header4, .Header5, .Header6 {
        @content;
    }
}

@mixin padding-v($val) {
    padding-top: $val;
    padding-bottom: $val;
}

@mixin padding-h($val) {
    padding-left: $val;
    padding-right: $val;
}

@mixin space-children-v {
    & > * + * {
        margin-top: 1.5rem;
    }
}

@mixin space-children-h {
    & > * + * {
        margin-left: 10px;
    }
}

@mixin left-right-items {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
}

@mixin underline($t: 0px) {
    & {
        position: relative;
    }

    &::after {
        position: absolute;
        content: "";
        height: 1px;
        bottom: 0;
        left: 0 - $t;
        background-color: constants.$divider;
        width: calc(100% + #{$t}*2);
    }
}